%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.9.0.529 (R2009b). Operating System: Microsoft Windows Vista.
%%Title: C:\Users\Tobias Müller\Documents\Studium\Master\FU Berlin\Kurse\Aktuelle Forschungsfragen aus der Makroökonomie\Referat & Hausarbeit\TEXFiscalFreeLunch2\Paperpics\Figure3govdebtalternativeprices.eps
%%CreationDate: 08/21/2016  21:59:35
%%DocumentNeededFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -214   174   811   667
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -214   174   811   667
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2568 8004 csm

    0     0 12304  5916 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 12305 5917 rf
6 w
0 4821 9535 0 0 -4821 1600 5265 4 MP
PP
-9535 0 0 4821 9535 0 0 -4821 1600 5265 5 MP stroke
4 w
DO
SO
6 w
0 sg
1600  444 mt 11135  444 L
1600 5265 mt 11135 5265 L
11135 5265 mt 11135  444 L
1600 5265 mt 1600  444 L
1600 5265 mt 11135 5265 L
1600 5265 mt 1600  444 L
1600 5265 mt 1600 5169 L
1600  444 mt 1600  539 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 216 FMSR

1540 5500 mt 
(0) s
3333 5265 mt 3333 5169 L
3333  444 mt 3333  539 L
3273 5500 mt 
(2) s
5067 5265 mt 5067 5169 L
5067  444 mt 5067  539 L
5007 5500 mt 
(4) s
6800 5265 mt 6800 5169 L
6800  444 mt 6800  539 L
6740 5500 mt 
(6) s
8534 5265 mt 8534 5169 L
8534  444 mt 8534  539 L
8474 5500 mt 
(8) s
10268 5265 mt 10268 5169 L
10268  444 mt 10268  539 L
10148 5500 mt 
(10) s
1600 5265 mt 1695 5265 L
11135 5265 mt 11039 5265 L
1319 5345 mt 
(-1) s
1600 3658 mt 1695 3658 L
11135 3658 mt 11039 3658 L
1139 3738 mt 
(-0.5) s
1600 2051 mt 1695 2051 L
11135 2051 mt 11039 2051 L
1445 2131 mt 
(0) s
1600  444 mt 1695  444 L
11135  444 mt 11039  444 L
1265  524 mt 
(0.5) s
1600  444 mt 11135  444 L
1600 5265 mt 11135 5265 L
11135 5265 mt 11135  444 L
1600 5265 mt 1600  444 L
gs 1600 444 9536 4822 rc
DA
60 w
/c8 { 0.000000 1.000000 0.000000 sr} bdef
c8
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 35 -15 34 -42 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 -30 35 -29 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 -49 35 -12 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 -44 35 -21 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 -47 35 -24 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 -14 35 -64 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 17 0 1600 1938 276 MP stroke
SO
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 -84 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 -52 35 -61 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 -151 35 -5 
34 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 -18 35 -202 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 -101 35 -209 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 -66 35 -374 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 17 0 1600 2880 276 MP stroke
DD
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 -50 35 -60 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 -163 35 -7 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 -142 35 -129 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 -307 35 -129 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 35 0 34 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
35 0 34 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 -10 35 -693 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 35 0 
34 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 -1035 35 -99 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 35 0 34 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 35 0 35 0 34 0 35 0 35 0 34 0 
35 0 35 0 35 0 34 0 35 0 35 0 34 0 35 0 
35 0 34 0 35 0 35 0 35 0 34 0 35 0 35 0 
34 0 35 0 17 0 1600 4388 276 MP stroke
gr

60 w
c10
DD
0 sg
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 240 FMSR

4300  267 mt 
(Alternative Price Contract Durations) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 216 FMSR

1036 4420 mt  -90 rotate
(Government Debt to Actual GDP) s
90 rotate
4375 5714 mt 
(% Change in Govt Spend \(Share of GDP\)) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1583 5308 mt 
( ) s
11119  486 mt 
( ) s
SO
6 w
1 sg
0 813 1992 0 0 -813 9083 5206 4 MP
PP
-1992 0 0 813 1992 0 0 -813 9083 5206 5 MP stroke
4 w
DO
SO
6 w
0 sg
9083 4393 mt 11075 4393 L
9083 5206 mt 11075 5206 L
11075 5206 mt 11075 4393 L
9083 5206 mt 9083 4393 L
9083 5206 mt 11075 5206 L
9083 5206 mt 9083 4393 L
9083 4393 mt 11075 4393 L
9083 5206 mt 11075 5206 L
11075 5206 mt 11075 4393 L
9083 5206 mt 9083 4393 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 216 FMSR

9544 4619 mt 
(10 qtr contracts) s
gs 9083 4393 1993 814 rc
DA
60 w
c8
354 0 9153 4542 2 MP stroke
SO
gr

60 w
c8
0 sg
9544 4877 mt 
(5 qtr contracts) s
gs 9083 4393 1993 814 rc
c9
354 0 9153 4799 2 MP stroke
gr

c9
0 sg
9544 5135 mt 
(4 qtr contracts) s
gs 9083 4393 1993 814 rc
DD
c10
354 0 9153 5056 2 MP stroke
SO
6 w
gr

6 w
c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
